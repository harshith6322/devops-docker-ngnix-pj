# /etc/nginx/nginx.conf

user  nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    #############################
    ## üîÅ Backend Load Balancer
    #############################
    upstream backend_servers {
        server backend1:3000 max_fails=3 fail_timeout=30s;
        server backend2:3000 max_fails=3 fail_timeout=30s;
        # ip_hash; # uncomment if sticky sessions needed
    }

    #############################
    ## üéØ Frontend Load Balancer (React Apps)
    #############################
    upstream frontend_servers {
        server client1:80 max_fails=2 fail_timeout=30s;
        server client2:80 max_fails=2 fail_timeout=30s;
    }

    #############################
    ## üñ•Ô∏è Server Block for Frontend
    #############################
    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://frontend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
        }
    }

    #############################
    ## üõ†Ô∏è API Backend Reverse Proxy
    #############################
    server {
        listen 3000;
        server_name localhost;

        location /api/ {
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
        }

        error_page 502 /custom_502.html;
        location = /custom_502.html {
            root /usr/share/nginx/html;
        }
    }
}
